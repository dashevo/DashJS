name: tests

on:
  workflow_dispatch:
  release:
    types: [published]
  pull_request:
    branches:
      - master
      - v[0-9]+.[0-9]+-dev

jobs:
  test:
    name: Run DAPI tests
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Enable NPM cache
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check NPM package lock version is updated
        run: npm run check-package # TODO: does this exist as an action already?

      - name: Install NPM dependencies
        run: npm ci

      - name: Create dotenv file
        run: cp .env.example .env

      - name: Run build
        run: npm run build --if-present

      - name: Run tests
        run: npm run test:coverage

  test_suite:
    name: Run platform test suite
    needs: test
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Enable NPM cache
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          concurrency: 8

      - uses: dashevo/gh-action-runtime-vars@master
        id: runtime-vars
        if: ${{ contains(github.event.pull_request.body, '/set-var')}}
        with:
          pull-request-body: ${{ github.event.pull_request.body }}

      - uses: dashevo/gh-action-platform-branches@master
        id: platform-branches
        with:
          override-dashmate-branch: v0.19-dev
          override-testsuite-branch: v0.19-dev

#       - uses: dashevo/gh-action-start-local-network@master
#         with:
#           actions-cache-url: ${{ steps.platform-branches.outputs.cache-url }}
#           actions-cache-token: ${{ steps.platform-branches.outputs.cache-token }}
#           drive-branch: ${{ steps.platform-branches.outputs.current-branch }}
#           dapi-branch: ${{ steps.runtime-vars.outputs.dapi-branch }}
#           dashmate-branch: ${{ steps.platform-branches.outputs.dashmate-branch }}
#           install-sdk-version: ${{ steps.runtime-vars.outputs.install-sdk-version }}
# 
#       - uses: dashevo/gh-action-run-platform-test-suite@master
#         with:
#           sdk-install: ${{ steps.runtime-vars.outputs.install-sdk-version }}
#           faucet-private-key: ${{ env.faucet-private-key }}
#           dpns-contract-id: ${{ env.dpns-contract-id }}
#           dpns-top-level-identity-id: ${{ env.dpns-top-level-identity-id }}
#           dpns-top-level-identity-private-key: ${{ env.dpns-top-level-identity-private-key }}
#           platform-test-suite-branch: ${{ steps.platform-branches.outputs.testsuite-branch }}

      - name: Show Docker logs
        if: ${{ failure() }}
        uses: jwalton/gh-docker-logs@v1

  release:
    name: Release to Docker Hub
    runs-on: ubuntu-20.04
    needs: test_suite
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Check package version matches tag
        uses: geritol/match-tag-to-package-version@0.1.0
        env:
          TAG_PREFIX: refs/tags/v
      
      - name: Enable NPM cache
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: NPM meta
        id: tag
        run: |
          if [[ ${{ contains(github.event.release.tag_name, 'dev') }} = true ]]
          then
            echo '::set-output name=result::dev'
          else
            echo '::set-output name=result::latest'
          fi

      - run: npm publish --tag ${{ steps.tag.outputs.result }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
